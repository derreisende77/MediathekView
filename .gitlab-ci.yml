
variables:
  MAVEN_OPTS: "-Djava.awt.headless=true -Dmaven.repo.local=./.m2/repository"
  MAVEN_CLI_OPTS: "-B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"

image: maven:3.8-eclipse-temurin-17


cache:
  paths:
    - ./.m2

default:
  tags:
    - mvrunner1
  before_script:
    - apt-get update -qq
    - apt-get install -y -qq openjdk-11-jre-headless ssh lib32ncurses6 lib32z1 wget tar > /dev/null
    - source /private/ENVS
    - whoami
    - mkdir ~/.ssh
    - ssh-keyscan -p 52150 mediathekview.de >> ~/.ssh/known_hosts
    - ssh-keyscan -p 52150 5.1.76.243 >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - wget -q https://download-gcdn.ej-technologies.com/install4j/install4j_unix_9_0_5.tar.gz
    - tar -zxf install4j_unix_9_0_5.tar.gz
    - java -version
    - ${INSTALL4J_JAVA_HOME}/bin/java -version
    - mvn -v
    - mvn clean
    - mvn install4j:install-license -Pinstall4j

stages:
  - deploy-nightly-lin
  - deploy-nightly-linarm
  - deploy-nightly-win
  - deploy-nightly-win32
  - deploy-nightly-mac
  - deploy-lin
  - deploy-linarm
  - deploy-win
  - deploy-win32

Build and Deploy nightly Linux:
  stage: deploy-nightly-lin
  script:
    - mvn -B package -Plinux,64bit,install4j $MAVEN_CLI_OPTS
    - echo "Baue AppImage"
    - scripte/appimage.sh
    - /skripte/deploy.sh nightly linux $CI_COMMIT_SHA
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == "develop"'

Build and Deploy nightly Linux ARM:
  stage: deploy-nightly-linarm
  script:
    - mvn -B package -Parm,!64bit,32bit,install4j,!linux $MAVEN_CLI_OPTS
    - /skripte/deploy.sh nightly linux-armhf $CI_COMMIT_SHA
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == "develop"'

Build and Deploy nightly Windows:
  stage: deploy-nightly-win
  script:
    - mvn -B package -Pwindows,64bit,install4j,!linux $MAVEN_CLI_OPTS
    - /skripte/deploy.sh nightly win $CI_COMMIT_SHA
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == "develop"'

Build and Deploy nightly Windows 32bit:
  stage: deploy-nightly-win32
  script:
    - mvn -B package -Pwindows32,!64bit,32bit,install4j,!linux $MAVEN_CLI_OPTS
    - /skripte/deploy.sh nightly win32 $CI_COMMIT_SHA
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == "develop"'

Build and Deploy nightly Mac:
  stage: deploy-nightly-mac
  script:
    - mvn -B package -Pmac,!linux $MAVEN_CLI_OPTS
    - /skripte/deploy.sh nightly mac $CI_COMMIT_SHA
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == "develop"'



Build and Deploy Linux:
  stage: deploy-lin
  script:
    - mvn -B package -Plinux,64bit,install4j $MAVEN_CLI_OPTS
    - echo "Baue AppImage"
    - scripte/appimage.sh
    - /skripte/deploy.sh release linux
  rules:
    - if: $CI_COMMIT_TAG

Build and Deploy Linux ARM:
  stage: deploy-linarm
  script:
    - mvn -B package -Parm,!64bit,32bit,install4j,!linux $MAVEN_CLI_OPTS
    - /skripte/deploy.sh release linux-armhf
  rules:
    - if: $CI_COMMIT_TAG

Build and Deploy Windows:
  stage: deploy-win
  script:
    - mvn -B package -Pwindows,64bit,install4j,!linux $MAVEN_CLI_OPTS
    - /skripte/deploy.sh release win
  rules:
    - if: $CI_COMMIT_TAG

Build and Deploy Windows 32bit:
  stage: deploy-win32
  script:
    - mvn -B package -Pwindows32,!64bit,32bit,install4j,!linux $MAVEN_CLI_OPTS
    - /skripte/deploy.sh release win32
  rules:
    - if: $CI_COMMIT_TAG
