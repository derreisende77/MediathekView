JFDML JFormDesigner: "7.0.5.0.404" Java: "11.0.13" encoding: "UTF-8"

new FormModel {
	contentType: "form/swing"
	root: new FormRoot {
		add( new FormContainer( "javax.swing.JPanel", new FormLayoutManager( class org.jdesktop.layout.GroupLayout ) {
			"$horizontalGroup": "par l {seq {space :::p, par l {comp jPanel8:::::x, comp jTabbedPaneBlacklist:::::x}, space :::p}}"
			"$verticalGroup": "par l {seq l {space :::p, comp jPanel8:::p:97:p, space :::p, comp jTabbedPaneBlacklist:::p:510:p, space :::p}}"
		} ) {
			name: "this"
			add( new FormContainer( "javax.swing.JTabbedPane", new FormLayoutManager( class javax.swing.JTabbedPane ) ) {
				name: "jTabbedPaneBlacklist"
				auxiliary() {
					"JavaCodeGenerator.variableLocal": true
				}
				add( new FormContainer( "javax.swing.JPanel", new FormLayoutManager( class org.jdesktop.swingx.VerticalLayout ) {
					"gap": 5
				} ) {
					name: "jPanel3"
					auxiliary() {
						"JavaCodeGenerator.variableLocal": true
					}
					add( new FormComponent( "javax.swing.JCheckBox" ) {
						name: "jCheckBoxZukunftNichtAnzeigen"
						"text": "Filme mit Datum in der Zukunft nicht anzeigen"
					} )
					add( new FormComponent( "javax.swing.JCheckBox" ) {
						name: "jCheckBoxGeo"
						"text": "Filme, die per Geoblocking gesperrt sind, nicht anzeigen"
						"toolTipText": "<html>Geogeblockte Filme können im jeweiligen \"Ausland\" nicht abgerufen werden.<br>Dazu muss die eigene Position in den Einstellungen angegeben werden</html>"
					} )
					add( new FormContainer( "javax.swing.JPanel", new FormLayoutManager( class org.jdesktop.layout.GroupLayout ) {
						"$horizontalGroup": "par l {seq {space :::p, par l {comp jSliderMinuten::l:::x, seq {par l {seq l {comp jLabel1:::p::p, space :::p, comp jTextFieldMinuten:::p:81:p}, comp jLabel13::l:p::p}, space :0:412:x}}, space :::p}}"
						"$verticalGroup": "par l {seq t {space :::p, par b {comp jLabel1::b:p::p, comp jTextFieldMinuten::b:p::p}, space u:p::p, comp jLabel13:::p::p, space :::x, comp jSliderMinuten:::p::p, space :::p}}"
					} ) {
						name: "jPanel6"
						"border": new javax.swing.border.EtchedBorder( 1, null, null )
						auxiliary() {
							"JavaCodeGenerator.variableLocal": true
						}
						add( new FormComponent( "javax.swing.JSlider" ) {
							name: "jSliderMinuten"
							"value": 0
						} )
						add( new FormComponent( "javax.swing.JLabel" ) {
							name: "jLabel1"
							"text": "Nur Filme anzeigen mit einer Länge von mehr als [min]:"
							auxiliary() {
								"JavaCodeGenerator.variableLocal": true
							}
						} )
						add( new FormComponent( "javax.swing.JTextField" ) {
							name: "jTextFieldMinuten"
							"editable": false
						} )
						add( new FormComponent( "javax.swing.JLabel" ) {
							name: "jLabel13"
							"text": "Filme, die keine Längenangabe haben, werden immer angezeigt."
							auxiliary() {
								"JavaCodeGenerator.variableLocal": true
							}
						} )
					} )
				}, new FormLayoutConstraints( null ) {
					"title": "Blacklist allgemein"
				} )
				add( new FormContainer( "javax.swing.JPanel", new FormLayoutManager( class org.jdesktop.layout.GroupLayout ) {
					"$horizontalGroup": "par l {seq l {space :::p, par l {comp panel2:::::x, comp jScrollPane1::t::846:x, comp jPanel4::l:::x, comp panel1::t:::x}, space :::p}}"
					"$verticalGroup": "par l {seq l {comp panel2:::p::p, space :p:12:p, comp jScrollPane1::::118:x, space :p:8:p, comp panel1:::p::p, space :::p, comp jPanel4:::p::p, space :p::p}}"
				} ) {
					name: "jPanel1"
					auxiliary() {
						"JavaCodeGenerator.variableLocal": true
					}
					add( new FormContainer( "javax.swing.JScrollPane", new FormLayoutManager( class javax.swing.JScrollPane ) ) {
						name: "jScrollPane1"
						auxiliary() {
							"JavaCodeGenerator.variableLocal": true
						}
						add( new FormComponent( "javax.swing.JTable" ) {
							name: "jTableBlacklist"
							"autoCreateRowSorter": true
						} )
					} )
					add( new FormContainer( "javax.swing.JPanel", new FormLayoutManager( class org.jdesktop.layout.GroupLayout ) {
						"$horizontalGroup": "par l {seq {space :p::p, par l {seq {comp jLabel7:::p::p, space :::x}, seq {par l {seq l {space :p:68:p, par t {comp jLabel6:::p::p, comp jLabel5:::p::p}, space :p::p, par l {comp jComboBoxSender::l:::x, comp jComboBoxThema:::::x}}, seq l {par t {comp jLabel2:::p::p, comp jLabel8::t:p::p}, space :p::p, par l {comp jTextFieldTitel::l:::x, comp jTextFieldThemaTitel:::::x}}}, space :p:12:p}}}, seq t {space :::x, comp jButtonAendern:3::p::p, space :::p, comp jButtonHinzufuegen:3::p::p, space :::p}}"
						"$verticalGroup": "par l {seq l {space :p:23:p, comp jLabel7:::p::p, space :::p, par b {comp jLabel5::b:p::p, comp jComboBoxSender:2:b:p::p}, space u:::p, par b {comp jLabel6::b:p::p, comp jComboBoxThema:2:b:p::p}, space u:::p, par b {comp jLabel8::b:p::p, comp jTextFieldTitel:2:b:p::p}, space u:::p, par b {comp jLabel2::b:p::p, comp jTextFieldThemaTitel:2:b:p::p}, space u:::p, par b {comp jButtonHinzufuegen::b:p::p, comp jButtonAendern::b:p::p}, space :::x}}"
					} ) {
						name: "jPanel4"
						"border": new javax.swing.border.EtchedBorder( 1, null, null )
						auxiliary() {
							"JavaCodeGenerator.variableLocal": true
						}
						add( new FormComponent( "javax.swing.JLabel" ) {
							name: "jLabel5"
							"text": "Sender:"
							auxiliary() {
								"JavaCodeGenerator.variableLocal": true
							}
						} )
						add( new FormComponent( "javax.swing.JComboBox" ) {
							name: "jComboBoxSender"
							"model": new javax.swing.DefaultComboBoxModel
							auxiliary() {
								"JavaCodeGenerator.typeParameters": "String"
							}
						} )
						add( new FormComponent( "javax.swing.JLabel" ) {
							name: "jLabel6"
							"text": "Thema:"
							auxiliary() {
								"JavaCodeGenerator.variableLocal": true
							}
						} )
						add( new FormComponent( "javax.swing.JComboBox" ) {
							name: "jComboBoxThema"
							"model": new javax.swing.DefaultComboBoxModel
							auxiliary() {
								"JavaCodeGenerator.typeParameters": "String"
							}
						} )
						add( new FormComponent( "javax.swing.JButton" ) {
							name: "jButtonHinzufuegen"
							"text": "Hinzufügen"
						} )
						add( new FormComponent( "javax.swing.JLabel" ) {
							name: "jLabel7"
							"text": "Sender, Thema, Titel oder Thema/Titel:"
							auxiliary() {
								"JavaCodeGenerator.variableLocal": true
							}
						} )
						add( new FormComponent( "javax.swing.JLabel" ) {
							name: "jLabel8"
							"text": "Titel:"
							auxiliary() {
								"JavaCodeGenerator.variableLocal": true
							}
						} )
						add( new FormComponent( "javax.swing.JTextField" ) {
							name: "jTextFieldTitel"
						} )
						add( new FormComponent( "javax.swing.JLabel" ) {
							name: "jLabel2"
							"text": "Thema oder Titel:"
							auxiliary() {
								"JavaCodeGenerator.variableLocal": true
							}
						} )
						add( new FormComponent( "javax.swing.JTextField" ) {
							name: "jTextFieldThemaTitel"
						} )
						add( new FormComponent( "javax.swing.JButton" ) {
							name: "jButtonAendern"
							"text": "Ändern"
						} )
					} )
					add( new FormContainer( "javax.swing.JPanel", new FormLayoutManager( class net.miginfocom.swing.MigLayout ) {
						"$layoutConstraints": "insets 0,hidemode 3,gap 5 5"
						"$columnConstraints": "[fill][grow,right]"
						"$rowConstraints": "[fill][fill]"
					} ) {
						name: "panel2"
						add( new FormComponent( "javax.swing.JRadioButton" ) {
							name: "jRadioButtonBlacklist"
							"$buttonGroup": new FormReference( "buttonGroup1" )
							"selected": true
							"text": "\"Sender / Thema / Titel\" werden nicht angezeigt (Blacklist)"
						}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
							"value": "cell 0 0"
						} )
						add( new FormComponent( "javax.swing.JRadioButton" ) {
							name: "jRadioButtonWhitelist"
							"$buttonGroup": new FormReference( "buttonGroup1" )
							"text": "nur diese \"Sender / Thema / Titel\" anzeigen (Whitelist)"
						}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
							"value": "cell 0 1"
						} )
						add( new FormComponent( "javax.swing.JButton" ) {
							name: "jButtonHilfe"
							"icon": new com.jformdesigner.model.SwingIcon( 0, "/mediathek/res/muster/button-help.png" )
							"toolTipText": "Hilfe anzeigen"
						}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
							"value": "cell 1 0 1 2,align right center,grow 0 0"
						} )
					} )
					add( new FormContainer( "javax.swing.JPanel", new FormLayoutManager( class net.miginfocom.swing.MigLayout ) {
						"$layoutConstraints": "insets 0,hidemode 3,gap 5 0"
						"$columnConstraints": "[grow,fill][fill]"
						"$rowConstraints": "[grow,center]"
					} ) {
						name: "panel1"
						add( new FormComponent( "javax.swing.JLabel" ) {
							name: "jLabel10"
							"text": "Alle Einträge löschen:"
							"horizontalAlignment": 4
							auxiliary() {
								"JavaCodeGenerator.variableLocal": true
							}
						}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
							"value": "cell 0 0"
						} )
						add( new FormComponent( "javax.swing.JButton" ) {
							name: "jButtonTabelleLoeschen"
							"toolTipText": "Alle Einträge löschen"
						}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
							"value": "cell 1 0"
						} )
					} )
				}, new FormLayoutConstraints( null ) {
					"title": "Sender-Thema-Titel"
				} )
			} )
			add( new FormContainer( "javax.swing.JPanel", new FormLayoutManager( class java.awt.GridLayout ) {
				"columns": 1
				"rows": 3
			} ) {
				name: "jPanel8"
				"border": new javax.swing.border.TitledBorder( "Allgemeine Einstellungen" )
				auxiliary() {
					"JavaCodeGenerator.variableLocal": true
				}
				add( new FormComponent( "javax.swing.JCheckBox" ) {
					name: "jCheckBoxStart"
					"text": "Beim Programmstart einschalten"
				} )
				add( new FormComponent( "javax.swing.JCheckBox" ) {
					name: "jCheckBoxBlacklistEingeschaltet"
					"text": "Im Tab Filme einschalten"
				} )
				add( new FormComponent( "javax.swing.JCheckBox" ) {
					name: "jCheckBoxAbo"
					"text": "Bei der Suche nach Abos berücksichtigen"
					"toolTipText": "<html>Die Blacklist beim Suchen nach Abos berücksichtigen.<br/>Ansonsten wird die komplette Filmliste durchsucht.</html>"
				} )
			} )
		}, new FormLayoutConstraints( null ) {
			"size": new java.awt.Dimension( 870, 625 )
			"location": new java.awt.Point( 0, 0 )
		} )
		add( new FormNonVisual( "javax.swing.ButtonGroup" ) {
			name: "buttonGroup1"
			auxiliary() {
				"JavaCodeGenerator.variableLocal": true
			}
		}, new FormLayoutConstraints( null ) {
			"location": new java.awt.Point( 0, 432 )
		} )
	}
}
